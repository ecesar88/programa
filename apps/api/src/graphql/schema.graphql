type BaseError implements Error {
  message: String!
}

"""Long necks, cool patterns, taller than you."""
type Client {
  id: Int!
  name: String!
  phone: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

interface Error {
  message: String!
}

type Mutation {
  createClient(name: String!, phone: String): Client!
  deleteClient(id: Int!): Client!
  updateClient(data: UserUpdateInput!, id: Int!): MutationUpdateClientResult!
}

union MutationUpdateClientResult = MutationUpdateClientSuccess | RecordNotFoundError

type MutationUpdateClientSuccess {
  data: Client!
}

type Query {
  getAllClients(page: Int = 1): Client!
  getClientById(id: Int!): Client!
}

type RecordNotFoundError implements Error {
  message: String!
}

input UserUpdateInput {
  name: String!
  phone: String
}