// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Client {
  id     Int     @id @default(autoincrement())
  name   String
  phone  String?
  orders Order[]
}

model Order {
  id           Int                @id @default(autoincrement())
  dateTime     DateTime           @default(now())
  address      String
  food         String
  observations OrderObservation[]
  Client       Client?            @relation(fields: [clientId], references: [id])
  clientId     Int?
}

model OrderObservation {
  id       Int      @id @default(autoincrement())
  content  String
  dateTime DateTime @default(now())
  Order    Order?   @relation(fields: [orderId], references: [id])
  orderId  Int?
}

model MenuEntryCategory {
  id   Int    @id @default(autoincrement())
  name String

  Menu   Menu? @relation(fields: [menuId], references: [id])
  menuId Int?  @unique

  MenuEntry   MenuEntry? @relation(fields: [menuEntryId], references: [id])
  menuEntryId Int?
}

model MenuEntryLabel {
  id    Int    @id @default(autoincrement())
  name  String
  color String

  MenuEntry   MenuEntry? @relation(fields: [menuEntryId], references: [id])
  menuEntryId Int?

  @@map("Label")
}

model Menu {
  id         Int                 @id @default(autoincrement())
  items      MenuEntry[]
  categories MenuEntryCategory[]
}

model MenuEntry {
  id          Int                 @id @default(autoincrement())
  name        String
  variant     MenuEntryVariant[]
  description String?
  labels      MenuEntryLabel[]
  category    MenuEntryCategory[]
  // images String?

  Menu   Menu? @relation(fields: [menuId], references: [id])
  menuId Int?
}

model MenuEntryVariant {
  id          Int     @id @default(autoincrement())
  price       Float?
  name        String?
  description String?

  MenuEntry   MenuEntry? @relation(fields: [menuEntryId], references: [id])
  menuEntryId Int?
}
